{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\n\nvar _jsxFileName = \"/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx\",\n    _this = this;\n\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\n\nvar StyledP = _styled2.p.withConfig({\n  displayName: \"pages__StyledP\",\n  componentId: \"sc-10dwe5m-0\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(245, 158, 11, var(--tw-text-opacity))\"\n});\n\nvar PurpleP = _styled2(StyledP).withConfig({\n  displayName: \"pages__PurpleP\",\n  componentId: \"sc-10dwe5m-1\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(139, 92, 246, var(--tw-text-opacity))\"\n}); // not work\n\n\nvar BlueP = _styled2.p.attrs({\n  className: \"text-blue-500\"\n}).withConfig({\n  displayName: \"pages__BlueP\",\n  componentId: \"sc-10dwe5m-2\"\n})([\"\"]);\n\nvar Input = _styled2.input.withConfig({\n  displayName: \"pages__Input\",\n  componentId: \"sc-10dwe5m-3\"\n})(function (_ref) {\n  var hasHover = _ref.hasHover;\n  return [{\n    \"borderWidth\": \"1px\",\n    \"borderRadius\": \"0.25rem\"\n  }, // Add base styles first\n  hasHover && {\n    \":hover\": {\n      \"--tw-border-opacity\": \"1\",\n      \"borderColor\": \"rgba(0, 0, 0, var(--tw-border-opacity))\"\n    }\n  } // Then conditional styles\n  // !hasHover && stylesWidth, // Then any css/sass in variables\n  ];\n});\n\nvar _StyledP = _styled2(\"p\").withConfig({\n  displayName: \"pages___StyledP\",\n  componentId: \"sc-10dwe5m-4\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(239, 68, 68, var(--tw-text-opacity))\"\n});\n\nvar IndexPage = function IndexPage() {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Home | Next.js + TypeScript Example\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello Next.js \\uD83D\\uDC4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(_StyledP, {\n      \"data-tw\": \"text-red-500\",\n      children: \"test red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(StyledP, {\n      children: \"test yellow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(PurpleP, {\n      children: \"test purple\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(BlueP, {\n      children: \"test blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(Input, {\n      hasHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx"],"names":["Link","Layout","StyledP","tw","p","PurpleP","BlueP","styled","attrs","className","Input","input","hasHover","IndexPage"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,OAAO,GAAGC,QAAE,CAACC,CAAN;AAAA;AAAA;AAAA,GAAO;AAAA;AAAA;AAAA,CAAP,CAAb;;AACA,IAAMC,OAAO,GAAGF,QAAE,CAACD,OAAD,CAAL;AAAA;AAAA;AAAA,GAAc;AAAA;AAAA;AAAA,CAAd,CAAb,C,CAEA;;;AACA,IAAMI,KAAK,GAAGC,QAAM,CAACH,CAAP,CAASI,KAAT,CAAe;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAAf,CAAH;AAAA;AAAA;AAAA,QAAX;;AAQA,IAAMC,KAAK,GAAGH,QAAM,CAACI,KAAV;AAAA;AAAA;AAAA,GAAwB;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,SAAkB,CACjD;AAAA;AAAA;AAAA,GADiD,EAC/B;AACpBA,EAAAA,QAAQ,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA,GAFqC,CAEf;AACpC;AAHmD,GAAlB;AAAA,CAAxB,CAAX;;;;;;;;;;AAMA,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB;AAAA,sBAC1B,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,qCAAd;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,eAME,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,aANF,eAOE,QAAC,KAAD;AAAO,MAAA,QAAQ;AAAf;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WAD0B;AAAA,CAA5B;;KAAMA,S;AAiBN,eAAeA,SAAf","sourcesContent":["import Link from \"next/link\";\nimport tw, { styled } from \"twin.macro\";\nimport Layout from \"../components/Layout\";\n\nconst StyledP = tw.p`text-yellow-500`;\nconst PurpleP = tw(StyledP)`text-purple-500`;\n\n// not work\nconst BlueP = styled.p.attrs({\n  className: \"text-blue-500\",\n})``;\n\ninterface IProps {\n  hasHover?: boolean;\n}\n\nconst Input = styled.input<IProps>(({ hasHover }) => [\n  tw`border rounded`, // Add base styles first\n  hasHover && tw`hover:border-black`, // Then conditional styles\n  // !hasHover && stylesWidth, // Then any css/sass in variables\n]);\n\nconst IndexPage: React.FC = () => (\n  <Layout title=\"Home | Next.js + TypeScript Example\">\n    <h1>{`Hello Next.js ðŸ‘‹`}</h1>\n    <p tw=\"text-red-500\">test red</p>\n    <StyledP>test yellow</StyledP>\n    <PurpleP>test purple</PurpleP>\n    <BlueP>test blue</BlueP>\n    <Input />\n    <Input hasHover />\n    <p>\n      <Link href=\"/about\">\n        <a>About</a>\n      </Link>\n    </p>\n  </Layout>\n);\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}