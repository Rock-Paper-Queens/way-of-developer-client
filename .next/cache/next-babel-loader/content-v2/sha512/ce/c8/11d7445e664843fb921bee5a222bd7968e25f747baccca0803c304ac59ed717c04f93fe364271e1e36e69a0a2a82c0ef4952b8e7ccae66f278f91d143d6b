{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\n\nvar _jsxFileName = \"/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx\",\n    _this = this;\n\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\";\n\nvar StyledP = _styled2.p.withConfig({\n  displayName: \"pages__StyledP\",\n  componentId: \"sc-10dwe5m-0\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(245, 158, 11, var(--tw-text-opacity))\"\n});\n\nvar PurpleP = _styled2(StyledP).withConfig({\n  displayName: \"pages__PurpleP\",\n  componentId: \"sc-10dwe5m-1\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(139, 92, 246, var(--tw-text-opacity))\"\n});\n\nvar BlueP = _styled2.p.attrs({\n  className: \"text-blue-500\"\n}).withConfig({\n  displayName: \"pages__BlueP\",\n  componentId: \"sc-10dwe5m-2\"\n})([\"\"]); // const stylesWidth = css`\n//   border: 1px solid hotpink;\n// `;\n// const Input = styled.input`\n//   border: ${(p: YourProps) => (p.invalid ? \"red\" : \"blue\")};\n// `;\n// interface IProps {\n//   hasHover: boolean;\n// }\n// const Input = styled<IProps>(\"input\")`\n//   color: ;\n// `;\n// const Input = styled.input(({ hasHover }) => [\n//   tw`border rounded`, // Add base styles first\n//   hasHover && tw`hover:border-black`, // Then conditional styles\n//   !hasHover && stylesWidth, // Then any css/sass in variables\n// ]);\n\n\nvar Component = function Component() {\n  return /*#__PURE__*/_jsxDEV(Input, {\n    hasHover: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, _this);\n};\n\n_c = Component;\n\nvar _StyledP = _styled2(\"p\").withConfig({\n  displayName: \"pages___StyledP\",\n  componentId: \"sc-10dwe5m-3\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(239, 68, 68, var(--tw-text-opacity))\"\n});\n\nvar IndexPage = function IndexPage() {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Home | Next.js + TypeScript Example\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello Next.js \\uD83D\\uDC4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(_StyledP, {\n      \"data-tw\": \"text-red-500\",\n      children: \"test red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(StyledP, {\n      children: \"test yellow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(PurpleP, {\n      children: \"test purple\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(BlueP, {\n      children: \"test blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, _this);\n};\n\n_c2 = IndexPage;\nexport default IndexPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"IndexPage\");","map":{"version":3,"sources":["/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx"],"names":["Link","Layout","StyledP","tw","p","PurpleP","BlueP","styled","attrs","className","Component","IndexPage"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,OAAO,GAAGC,QAAE,CAACC,CAAN;AAAA;AAAA;AAAA,GAAO;AAAA;AAAA;AAAA,CAAP,CAAb;;AACA,IAAMC,OAAO,GAAGF,QAAE,CAACD,OAAD,CAAL;AAAA;AAAA;AAAA,GAAc;AAAA;AAAA;AAAA,CAAd,CAAb;;AAEA,IAAMI,KAAK,GAAGC,QAAM,CAACH,CAAP,CAASI,KAAT,CAAe;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAAf,CAAH;AAAA;AAAA;AAAA,QAAX,C,CAIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,sBAAM,QAAC,KAAD;AAAO,IAAA,QAAQ;AAAf;AAAA;AAAA;AAAA;AAAA,WAAN;AAAA,CAAlB;;KAAMA,S;;;;;;;;;;AAEN,IAAMC,SAAmB,GAAG,SAAtBA,SAAsB;AAAA,sBAC1B,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,qCAAd;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,eAME;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA;AAAA,WAD0B;AAAA,CAA5B;;MAAMA,S;AAeN,eAAeA,SAAf","sourcesContent":["import Link from \"next/link\";\nimport tw, { styled, css } from \"twin.macro\";\nimport Layout from \"../components/Layout\";\n\nconst StyledP = tw.p`text-yellow-500`;\nconst PurpleP = tw(StyledP)`text-purple-500`;\n\nconst BlueP = styled.p.attrs({\n  className: \"text-blue-500\",\n})``;\n\n// const stylesWidth = css`\n//   border: 1px solid hotpink;\n// `;\n\n// const Input = styled.input`\n//   border: ${(p: YourProps) => (p.invalid ? \"red\" : \"blue\")};\n// `;\n\n// interface IProps {\n//   hasHover: boolean;\n// }\n\n// const Input = styled<IProps>(\"input\")`\n//   color: ;\n// `;\n\n// const Input = styled.input(({ hasHover }) => [\n//   tw`border rounded`, // Add base styles first\n//   hasHover && tw`hover:border-black`, // Then conditional styles\n//   !hasHover && stylesWidth, // Then any css/sass in variables\n// ]);\n\nconst Component = () => <Input hasHover />;\n\nconst IndexPage: React.FC = () => (\n  <Layout title=\"Home | Next.js + TypeScript Example\">\n    <h1>{`Hello Next.js ðŸ‘‹`}</h1>\n    <p tw=\"text-red-500\">test red</p>\n    <StyledP>test yellow</StyledP>\n    <PurpleP>test purple</PurpleP>\n    <BlueP>test blue</BlueP>\n    <p>\n      <Link href=\"/about\">\n        <a>About</a>\n      </Link>\n    </p>\n  </Layout>\n);\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}