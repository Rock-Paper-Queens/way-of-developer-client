{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nvar _jsxFileName = \"/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\"; // const StyledP = tw.p`text-yellow-500`;\n// const PurpleP = tw(StyledP)`text-purple-500`;\n// not work\n\nconst BlueP = _styled2.p.attrs({\n  className: \"text-black\"\n}).withConfig({\n  displayName: \"pages__BlueP\",\n  componentId: \"sc-10dwe5m-0\"\n})([\"\"]);\n\nconst Input = _styled2.input.withConfig({\n  displayName: \"pages__Input\",\n  componentId: \"sc-10dwe5m-1\"\n})(({\n  hasHover\n}) => [{\n  \"borderWidth\": \"1px\",\n  \"borderRadius\": \"0.25rem\"\n}, // Add base styles first\nhasHover && {\n  \":hover\": {\n    \"--tw-border-opacity\": \"1\",\n    \"borderColor\": \"rgba(0, 0, 0, var(--tw-border-opacity))\"\n  }\n} // Then conditional styles\n// !hasHover && stylesWidth, // Then any css/sass in variables\n]);\n\nvar _StyledP = _styled2(\"p\").withConfig({\n  displayName: \"pages___StyledP\",\n  componentId: \"sc-10dwe5m-2\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(96, 96, 96, var(--tw-text-opacity))\"\n});\n\nconst IndexPage = () => /*#__PURE__*/_jsxDEV(Layout, {\n  title: \"Home | Next.js + TypeScript Example\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: `Hello Next.js ðŸ‘‹`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(_StyledP, {\n    \"data-tw\": \"text-gray-text-dark\",\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Link, {\n    href: \"/about\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx"],"names":["Link","Layout","BlueP","styled","p","attrs","className","Input","input","hasHover","IndexPage"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;AAEA;;AACA,MAAMC,KAAK,GAAGC,QAAM,CAACC,CAAP,CAASC,KAAT,CAAe;AAC3BC,EAAAA,SAAS,EAAE;AADgB,CAAf,CAAH;AAAA;AAAA;AAAA,QAAX;;AAQA,MAAMC,KAAK,GAAGJ,QAAM,CAACK,KAAV;AAAA;AAAA;AAAA,GAAwB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB,CACjD;AAAA;AAAA;AAAA,CADiD,EAC/B;AACpBA,QAAQ,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA,CAFqC,CAEf;AACpC;AAHmD,CAA1C,CAAX;;;;;;;;;;AAMA,MAAMC,SAAmB,GAAG,mBAC1B,QAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,qCAAd;AAAA,0BACE;AAAA,cAAM;AAAN;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eASE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UATF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAiBA,eAAeA,SAAf","sourcesContent":["import Link from \"next/link\";\nimport tw, { styled } from \"twin.macro\";\nimport Layout from \"../components/Layout\";\n\n// const StyledP = tw.p`text-yellow-500`;\n// const PurpleP = tw(StyledP)`text-purple-500`;\n\n// not work\nconst BlueP = styled.p.attrs({\n  className: \"text-black\",\n})``;\n\ninterface IProps {\n  hasHover?: boolean;\n}\n\nconst Input = styled.input<IProps>(({ hasHover }) => [\n  tw`border rounded`, // Add base styles first\n  hasHover && tw`hover:border-black`, // Then conditional styles\n  // !hasHover && stylesWidth, // Then any css/sass in variables\n]);\n\nconst IndexPage: React.FC = () => (\n  <Layout title=\"Home | Next.js + TypeScript Example\">\n    <h1>{`Hello Next.js ðŸ‘‹`}</h1>\n    <p tw=\"text-gray-text-dark\">test</p>\n    {/* <StyledP>test yellow</StyledP> */}\n    {/* <PurpleP>test purple</PurpleP> */}\n    {/* <BlueP>test blue</BlueP> */}\n    {/* <Input />\n    <Input hasHover />\n    <p> */}\n    <Link href=\"/about\">\n      <a>About</a>\n    </Link>\n    {/* </p> */}\n  </Layout>\n);\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}