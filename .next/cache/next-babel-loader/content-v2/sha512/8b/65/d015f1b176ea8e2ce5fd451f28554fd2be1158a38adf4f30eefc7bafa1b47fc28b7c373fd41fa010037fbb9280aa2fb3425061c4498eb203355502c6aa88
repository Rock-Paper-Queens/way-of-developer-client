{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _styled3 from \"styled-components\";\nimport _styled2 from \"styled-components\";\nvar _jsxFileName = \"/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx\";\nimport Link from \"next/link\";\nimport Layout from \"../components/Layout\"; // const StyledP = tw.p`text-yellow-500`;\n// const PurpleP = tw(StyledP)`text-purple-500`;\n// not work\n// const BlueP = styled.p.attrs({\n//   className: \"text-black\",\n// })``;\n\nconst Input = _styled2.input.withConfig({\n  displayName: \"pages__Input\",\n  componentId: \"sc-10dwe5m-0\"\n})(({\n  hasHover\n}) => [{\n  \"borderWidth\": \"1px\",\n  \"borderRadius\": \"0.25rem\"\n}, // Add base styles first\nhasHover && {\n  \":hover\": {\n    \"--tw-border-opacity\": \"1\",\n    \"borderColor\": \"rgba(0, 0, 0, var(--tw-border-opacity))\"\n  }\n} // Then conditional styles\n// !hasHover && stylesWidth, // Then any css/sass in variables\n]);\n\nvar _StyledP = _styled2(\"p\").withConfig({\n  displayName: \"pages___StyledP\",\n  componentId: \"sc-10dwe5m-1\"\n})({\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(0, 0, 0, var(--tw-text-opacity))\",\n  \"fontSize\": \"1.5rem\",\n  \"lineHeight\": \"2rem\"\n});\n\nconst IndexPage = () => /*#__PURE__*/_jsxDEV(Layout, {\n  title: \"Home | Next.js + TypeScript Example\",\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: `Hello Next.js ðŸ‘‹`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(_StyledP, {\n    \"data-tw\": \"text-black text-2xl\",\n    children: \"test red\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/dongoc/personal/rpq/way-of-developer/client/pages/index.tsx"],"names":["Link","Layout","Input","styled","input","hasHover","IndexPage"],"mappings":";;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;;AAMA,MAAMC,KAAK,GAAGC,QAAM,CAACC,KAAV;AAAA;AAAA;AAAA,GAAwB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB,CACjD;AAAA;AAAA;AAAA,CADiD,EAC/B;AACpBA,QAAQ,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA,CAFqC,CAEf;AACpC;AAHmD,CAA1C,CAAX;;;;;;;;;;;;AAMA,MAAMC,SAAmB,GAAG,mBAC1B,QAAC,MAAD;AAAQ,EAAA,KAAK,EAAC,qCAAd;AAAA,0BACE;AAAA,cAAM;AAAN;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAYA,eAAeA,SAAf","sourcesContent":["import Link from \"next/link\";\nimport tw, { styled } from \"twin.macro\";\nimport Layout from \"../components/Layout\";\n\n// const StyledP = tw.p`text-yellow-500`;\n// const PurpleP = tw(StyledP)`text-purple-500`;\n\n// not work\n// const BlueP = styled.p.attrs({\n//   className: \"text-black\",\n// })``;\n\ninterface IProps {\n  hasHover?: boolean;\n}\n\nconst Input = styled.input<IProps>(({ hasHover }) => [\n  tw`border rounded`, // Add base styles first\n  hasHover && tw`hover:border-black`, // Then conditional styles\n  // !hasHover && stylesWidth, // Then any css/sass in variables\n]);\n\nconst IndexPage: React.FC = () => (\n  <Layout title=\"Home | Next.js + TypeScript Example\">\n    <h1>{`Hello Next.js ðŸ‘‹`}</h1>\n    <p tw=\"text-black text-2xl\">test red</p>\n    <p>\n      <Link href=\"/about\">\n        <a>About</a>\n      </Link>\n    </p>\n  </Layout>\n);\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}